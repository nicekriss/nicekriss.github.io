name: Build projects manifest
on:
  push:
    paths:
      - 'images/**'
      - '.github/workflows/build-projects.yml'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Generate projects.json
        shell: bash
        run: |
          set -e
          echo "[" > projects.json
          first_proj=1
          for dir in images/*/ ; do
            [ -d "$dir" ] || continue
            id=$(basename "$dir")
            cover=""
            # 대표이미지: cover.* 우선, 없으면 첫 이미지
            for c in "$dir"cover.*; do [ -f "$c" ] && cover=$(basename "$c") && break; done
            if [ -z "$cover" ]; then
              for f in "$dir"*.*; do
                case "${f##*.}" in jpg|jpeg|png|webp|gif|JPG|JPEG|PNG|WEBP|GIF) cover=$(basename "$f"); break;; esac
              done
            fi
            # 이미지 리스트 생성
            imgs=""
            first=1
            for f in "$dir"*.*; do
              case "${f##*.}" in jpg|jpeg|png|webp|gif|JPG|JPEG|PNG|WEBP|GIF)
                name=$(basename "$f")
                # cover는 중복 방지 위해 목록에 포함하되 순서상 첫 장이 되도록 정렬은 프론트에서 처리 가능
                if [ $first -eq 1 ]; then imgs="\"$name\""; first=0; else imgs="$imgs, \"$name\""; fi
              ;;
              esac
            done
            [ -z "$imgs" ] && continue
            # JSON 출력
            if [ $first_proj -eq 0 ]; then echo "," >> projects.json; fi
            echo -n "  {\"id\":\"$id\",\"title\":\"$id\",\"cover\":\"$cover\",\"images\":[${imgs}]}" >> projects.json
            first_proj=0
          done
          echo -e "\n]" >> projects.json

      - name: Commit manifest
        uses: EndBug/add-and-commit@v9
        with:
          add: 'projects.json'
          message: 'Auto-generate projects.json'
