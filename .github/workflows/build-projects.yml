name: Build projects manifest (with watermark)
permissions:
  contents: write

on:
  push:
    paths:
      - 'images/**'
      - 'assets/**'
      - '.github/workflows/build-projects.yml'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # ⬇️ 워터마크 도구 설치
      - name: Install ImageMagick (and SVG support)
        run: |
          sudo apt-get update
          sudo apt-get install -y imagemagick librsvg2-bin

      - name: Generate watermarked images + projects.json
        shell: bash
        run: |
          set -euo pipefail
          shopt -s nullglob

          OUT_BASE="wm_images"
          mkdir -p "$OUT_BASE"

          # 워터마크 소스 결정 (assets/ 에 두기)
          if [ -f assets/watermark.svg ]; then
            # SVG는 PNG로 임시 변환 (투명 유지)
            rsvg-convert -w 1200 -h 400 assets/watermark.svg -o /tmp/wm.png
            WM_SRC="/tmp/wm.png"
          elif [ -f assets/watermark.png ]; then
            WM_SRC="assets/watermark.png"
          else
            echo "No watermark found (assets/watermark.svg or .png). Proceeding without watermark." >&2
            WM_SRC=""
          fi

          # 사용할 명령 결정
          MAGICK=$(command -v magick || true)
          CONVERT=$(command -v convert || true)
          if [ -n "$MAGICK" ]; then
            run_wm () { magick "$@"; }
          elif [ -n "$CONVERT" ]; then
            run_wm () { convert "$@"; }
          else
            echo "ImageMagick still not found" >&2
            exit 1
          fi

          echo "[" > projects.json
          first_proj=1

          for dir in images/*/ ; do
            [ -d "$dir" ] || continue
            id=$(basename "$dir")
            mkdir -p "$OUT_BASE/$id"

            # 대표 이미지
            cover=""
            for c in "$dir"cover.*; do [ -f "$c" ] && cover=$(basename "$c") && break; done
            if [ -z "$cover" ]; then
              for f in "$dir"*.*; do
                case "${f##*.}" in jpg|jpeg|png|webp|gif|JPG|JPEG|PNG|WEBP|GIF) cover=$(basename "$f"); break;; esac
              done
            fi

            # 이미지 워터마크 생성 (없는 경우엔 복사)
            imgs=""
            first=1
            while IFS= read -r -d '' f; do
              base=$(basename "$f")
              if [ -n "$WM_SRC" ]; then
                # 오른쪽 아래, 워터마크 가로 18%, 투명도 30%
                run_wm "$f" \( "$WM_SRC" -alpha set -channel A -evaluate set 30% \) \
                  -gravity southeast -resize 100% \
                  \( "$WM_SRC" -resize 18% \) -gravity southeast -geometry +24+24 -composite \
                  "$OUT_BASE/$id/$base"
              else
                cp "$f" "$OUT_BASE/$id/$base"
              fi

              if [ $first -eq 1 ]; then imgs="\"$base\""; first=0; else imgs="$imgs, \"$base\""; fi
            done < <(find "$dir" -maxdepth 1 -type f -iregex '.*\.\(jpg\|jpeg\|png\|webp\|gif\)$' -print0 | sort -z)

            [ -z "$imgs" ] && continue

            # meta.txt -> title/desc
            title=""; desc=""
            if [ -f "${dir}meta.txt" ]; then
              title=$(grep -i '^title:' "${dir}meta.txt" | sed 's/^title:[[:space:]]*//; s/\r//g; s/\n/ /g; s/\\/\\\\/g; s/"/\\"/g')
              desc=$(grep -i '^desc:'  "${dir}meta.txt" | sed  's/^desc:[[:space:]]*//;  s/\r//g; s/\n/ /g; s/\\/\\\\/g; s/"/\\"/g')
            fi

            # JSON 레코드
            if [ $first_proj -eq 0 ]; then echo "," >> projects.json; fi
            echo -n "  {\"id\":\"$id\",\"title\":\"${title:-$id}\",\"desc\":\"$desc\",\"cover\":\"$cover\",\"images\":[${imgs}]}" >> projects.json
            first_proj=0
          done
          echo -e "\n]" >> projects.json

      - name: Commit manifest and watermarked images
        uses: EndBug/add-and-commit@v9
        with:
          add: 'projects.json wm_images'
          message: 'Auto: watermark & projects.json'
